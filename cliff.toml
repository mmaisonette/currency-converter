[changelog]
# Filter out commit types
filter = true

# Commit parsers for different types of commits
[changelog.commit_parsers]
[[changelog.commit_parsers.rule]]
pattern = "^feat"
group = "Features"

[[changelog.commit_parsers.rule]]
pattern = "^fix"
group = "Bug Fixes"

[[changelog.commit_parsers.rule]]
pattern = "^docs"
group = "Documentation"

[[changelog.commit_parsers.rule]]
pattern = "^perf"
group = "Performance"

[[changelog.commit_parsers.rule]]
pattern = "^refactor"
group = "Refactoring"

[[changelog.commit_parsers.rule]]
pattern = "^test"
group = "Testing"

[[changelog.commit_parsers.rule]]
pattern = "^ci"
group = "Continuous Integration"

[[changelog.commit_parsers.rule]]
pattern = "^revert"
group = "Reverts"

[[changelog.commit_parsers.rule]]
pattern = "^style"
group = "Layout Style"

[[changelog.commit_parsers.rule]]
pattern = "^chore"
group = "Other Changes"

[git]
# Parse commits based on conventional commit specification
conventional_commits = true
filter_unconventional = true
split_commits = false

# Template for the changelog with commit IDs
[changelog.template]
body = """
{% if version %}## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% endif %}
{% for group, commits in groups %}### {{ group | striptags | trim | upper_first }}
{% for commit in commits %}
- `{{ commit.id | truncate(length=7, end="") }}` {{ commit.message | upper_first }}{% endfor %}
{% endfor %}
"""